<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webapp.buildPC.dao.ComponentMapper">

    <resultMap id = "resultMap" type = "com.webapp.buildPC.domain.Component">
        <result property = "componentID" column = "componentID"/>
        <result property = "componentName" column = "componentName"/>
        <result property = "price" column = "price"/>
        <result property = "amount" column = "amount"/>
        <result property = "image" column = "image"/>
        <result property = "description" column = "description"/>
        <result property = "brandID" column = "brandID"/>
        <result property = "categoryID" column = "categoryID"/>
        <result property = "feedbackID" column = "feedbackID"/>
        <result property = "status" column = "status"/>
    </resultMap>

    <select id="getAllComponent" resultType="com.webapp.buildPC.domain.Component">
        SELECT
            componentID,
            componentName,
            price,
            amount,
            image,
            description,
            brandID,
            categoryID,
            feedbackID,
            status
        FROM Component;
    </select>

    <select id="getComponentByName" resultType="com.webapp.buildPC.domain.Component">
        SELECT
        componentID,
        componentName,
        price,
        amount,
        image,
        description,
        brandID,
        categoryID,
        feedbackID,
        status
        FROM Component
                WHERE componentName like CONCAT('%', #{componentName}, '%');
    </select>

    <select id="getComponentByBrand" resultType="com.webapp.buildPC.domain.Component">
        SELECT
        componentID,
        componentName,
        price,
        amount,
        image,
        description,
        brandID,
        categoryID,
        feedbackID,
        status
        FROM Component
        WHERE brandID = #{brandID};
    </select>

    <insert id="addComponent" useGeneratedKeys="true" keyProperty="componentID" parameterType="com.webapp.buildPC.domain.Component" >
        insert into Component (componentID, componentName, price, amount, image, description, brandID, categoryID, status)
        values (#{componentID},#{componentName},#{price}, #{amount},#{image}, #{description},#{brandID},#{categoryID}, #{status} )
    </insert>
    <select id="getComponentDetail" resultType="com.webapp.buildPC.domain.Component">
        SELECT
        componentID,
        componentName,
        price,
        amount,
        image,
        description,
        brandID,
        categoryID,
        feedbackID,
        status
        FROM Component
        WHERE componentID = #{componentID};
    </select>

    <update id = "editComponent" parameterType = "com.webapp.buildPC.domain.Component">
        UPDATE Component SET componentName = #{componentName},
                                price = #{price},
                                amount = #{amount},
                                image = #{image},
                                description = #{description},
                                brandID = #{brandID},
                                categoryID = #{categoryID},
                                status = #{status}
                                WHERE componentID = #{componentID};
    </update>

    <select id="customComponentByAttribute" resultType="com.webapp.buildPC.domain.Component">
        SELECT
                    Component.componentID,
                    componentName,
                    price,
                    amount,
                    image,
                    description,
                    brandID,
                    Category.categoryName,
                    feedbackID,
                    status
            FROM Component, Category, AttributeComponent, Attribute
                    WHERE  Component.componentID = AttributeComponent.componentID
                    and Attribute.attributeID = AttributeComponent.attributeID
                    and Component.categoryID = Category.categoryID
                    and Attribute.attributeID = #{attributeID} and Category.categoryID = #{categoryID}
    </select>
    <insert id="updateAmountForComponent" parameterType="com.webapp.buildPC.domain.CartDetail">
        UPDATE Component
        SET amount = #{amount}
        WHERE componentID = #{componentID}
    </insert>

    <select id="getComponentListByCategoryTypeID" resultType="com.webapp.buildPC.domain.Component">
        SELECT
                componentID,
                componentName,
                price,
                amount,
                image,
                description,
                brandID,
                Category.categoryID,
                feedbackID,
                status
        FROM Component, Category, CategoryType
                WHERE Component.categoryID = Category.categoryID
                and CategoryType.categoryTypeID = Category.categoryTypeID
                and Category.categoryTypeID = #{categoryTypeID}
    </select>

    <select id="getComponentByCategoryID" resultType="com.webapp.buildPC.domain.Component">
        SELECT
        componentID,
        componentName,
        price,
        amount,
        image,
        description,
        brandID,
        categoryID,
        feedbackID,
        status
        FROM Component
        WHERE categoryID = #{categoryID};
    </select>

</mapper>

